syntax = "proto3";

package v1api;
option go_package="v1api";

message Drive {
    string UUID = 1;
    string VID = 2;
    string PID = 3;
    string SerialNumber = 4;
    string Health = 5;
    string Type = 6;
    // size in bytes
    int64 Size = 7;
    string Status = 8;
    string Usage = 9;
    string NodeId = 10;
    // path to the device. may not be set by drivemgr.
    string Path = 11;
    string Enclosure = 12;
    string Slot = 13;
    string Bay = 14;
    string Firmware = 15;
    int64 Endurance = 16;
    string LEDState = 17;
    bool IsSystem = 18;
    bool IsClean = 19;
}

message Volume {
    string Id = 1;
    string Location = 2;
    string LocationType = 3;
    string StorageClass = 4;
    string NodeId = 5;
    repeated string Owners = 6;
    int64 Size = 7;
    string Mode = 8;
    string Type = 9;
    string Health = 10;
    string OperationalStatus = 11;
    string CSIStatus = 12;
    string Usage = 13;
    bool Ephemeral = 14;
}

message AvailableCapacity {
    string Location = 1;
    string NodeId = 2;
    string storageClass = 3;
    int64 Size = 4;
}

message AvailableCapacityReservation {
    string Namespace = 1;
    string Status = 2;
    NodeRequests NodeRequests = 3;
    repeated ReservationRequest ReservationRequests = 4;
}

message NodeRequests {
    // requested - filled by scheduler/extender
    repeated string Requested = 1;
    // reserved - filled by csi driver controller
    repeated string Reserved = 2;
}

message ReservationRequest {
    // request per volume filled by scheduler/extender
    CapacityRequest CapacityRequest = 1;
    // reservation filled by csi driver controller
    repeated string Reservations = 2;
}

message CapacityRequest {
    string Name = 1;
    string StorageClass = 2;
    int64 Size = 3;
}

message LogicalVolumeGroup {
    string Name = 1;
    string Node = 2;
    repeated string Locations = 3;
    int64 Size = 4;
    repeated string VolumeRefs = 5;
    string Status = 6;
    string Health = 7;
}

message Node {
    string UUID = 1;
    // key - address type, value - address, align with NodeAddress struct from k8s.io/api/core/v1
    map<string, string> Addresses = 2;
}
