// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drivemgrsvc.proto

package v1api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DrivesRequest struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrivesRequest) Reset()         { *m = DrivesRequest{} }
func (m *DrivesRequest) String() string { return proto.CompactTextString(m) }
func (*DrivesRequest) ProtoMessage()    {}
func (*DrivesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65bf77650f5c7dcf, []int{0}
}

func (m *DrivesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrivesRequest.Unmarshal(m, b)
}
func (m *DrivesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrivesRequest.Marshal(b, m, deterministic)
}
func (m *DrivesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrivesRequest.Merge(m, src)
}
func (m *DrivesRequest) XXX_Size() int {
	return xxx_messageInfo_DrivesRequest.Size(m)
}
func (m *DrivesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DrivesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DrivesRequest proto.InternalMessageInfo

func (m *DrivesRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type DrivesResponse struct {
	Disks                []*Drive `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrivesResponse) Reset()         { *m = DrivesResponse{} }
func (m *DrivesResponse) String() string { return proto.CompactTextString(m) }
func (*DrivesResponse) ProtoMessage()    {}
func (*DrivesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65bf77650f5c7dcf, []int{1}
}

func (m *DrivesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrivesResponse.Unmarshal(m, b)
}
func (m *DrivesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrivesResponse.Marshal(b, m, deterministic)
}
func (m *DrivesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrivesResponse.Merge(m, src)
}
func (m *DrivesResponse) XXX_Size() int {
	return xxx_messageInfo_DrivesResponse.Size(m)
}
func (m *DrivesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DrivesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DrivesResponse proto.InternalMessageInfo

func (m *DrivesResponse) GetDisks() []*Drive {
	if m != nil {
		return m.Disks
	}
	return nil
}

type DriveLocateRequest struct {
	DriveSerialNumber    string   `protobuf:"bytes,1,opt,name=driveSerialNumber,proto3" json:"driveSerialNumber,omitempty"`
	Action               int32    `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriveLocateRequest) Reset()         { *m = DriveLocateRequest{} }
func (m *DriveLocateRequest) String() string { return proto.CompactTextString(m) }
func (*DriveLocateRequest) ProtoMessage()    {}
func (*DriveLocateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65bf77650f5c7dcf, []int{2}
}

func (m *DriveLocateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriveLocateRequest.Unmarshal(m, b)
}
func (m *DriveLocateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriveLocateRequest.Marshal(b, m, deterministic)
}
func (m *DriveLocateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriveLocateRequest.Merge(m, src)
}
func (m *DriveLocateRequest) XXX_Size() int {
	return xxx_messageInfo_DriveLocateRequest.Size(m)
}
func (m *DriveLocateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DriveLocateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DriveLocateRequest proto.InternalMessageInfo

func (m *DriveLocateRequest) GetDriveSerialNumber() string {
	if m != nil {
		return m.DriveSerialNumber
	}
	return ""
}

func (m *DriveLocateRequest) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

type DriveLocateResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriveLocateResponse) Reset()         { *m = DriveLocateResponse{} }
func (m *DriveLocateResponse) String() string { return proto.CompactTextString(m) }
func (*DriveLocateResponse) ProtoMessage()    {}
func (*DriveLocateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65bf77650f5c7dcf, []int{3}
}

func (m *DriveLocateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriveLocateResponse.Unmarshal(m, b)
}
func (m *DriveLocateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriveLocateResponse.Marshal(b, m, deterministic)
}
func (m *DriveLocateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriveLocateResponse.Merge(m, src)
}
func (m *DriveLocateResponse) XXX_Size() int {
	return xxx_messageInfo_DriveLocateResponse.Size(m)
}
func (m *DriveLocateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DriveLocateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DriveLocateResponse proto.InternalMessageInfo

func (m *DriveLocateResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type NodeLocateRequest struct {
	Action               int32    `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeLocateRequest) Reset()         { *m = NodeLocateRequest{} }
func (m *NodeLocateRequest) String() string { return proto.CompactTextString(m) }
func (*NodeLocateRequest) ProtoMessage()    {}
func (*NodeLocateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65bf77650f5c7dcf, []int{4}
}

func (m *NodeLocateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeLocateRequest.Unmarshal(m, b)
}
func (m *NodeLocateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeLocateRequest.Marshal(b, m, deterministic)
}
func (m *NodeLocateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeLocateRequest.Merge(m, src)
}
func (m *NodeLocateRequest) XXX_Size() int {
	return xxx_messageInfo_NodeLocateRequest.Size(m)
}
func (m *NodeLocateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeLocateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeLocateRequest proto.InternalMessageInfo

func (m *NodeLocateRequest) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_65bf77650f5c7dcf, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DrivesRequest)(nil), "v1api.DrivesRequest")
	proto.RegisterType((*DrivesResponse)(nil), "v1api.DrivesResponse")
	proto.RegisterType((*DriveLocateRequest)(nil), "v1api.DriveLocateRequest")
	proto.RegisterType((*DriveLocateResponse)(nil), "v1api.DriveLocateResponse")
	proto.RegisterType((*NodeLocateRequest)(nil), "v1api.NodeLocateRequest")
	proto.RegisterType((*Empty)(nil), "v1api.Empty")
}

func init() {
	proto.RegisterFile("drivemgrsvc.proto", fileDescriptor_65bf77650f5c7dcf)
}

var fileDescriptor_65bf77650f5c7dcf = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x17, 0xa5, 0x1d, 0xbe, 0x6d, 0xc2, 0xa2, 0x8e, 0xda, 0xd3, 0xc8, 0xc5, 0x82, 0x5a,
	0x70, 0x8a, 0x47, 0x41, 0x99, 0x88, 0x30, 0x76, 0xa8, 0xb7, 0xdd, 0xba, 0x36, 0x48, 0xd0, 0x36,
	0xb5, 0x2f, 0x2d, 0xec, 0x4f, 0xf4, 0xbf, 0x92, 0x26, 0xa9, 0xae, 0x9b, 0xc7, 0xef, 0xbd, 0x8f,
	0x2f, 0xbf, 0x2f, 0x09, 0x8c, 0xd3, 0x52, 0xd4, 0x3c, 0x7b, 0x2f, 0xb1, 0x4e, 0xc2, 0xa2, 0x94,
	0x4a, 0x52, 0xa7, 0xbe, 0x89, 0x0b, 0xe1, 0x0f, 0xd4, 0xa6, 0xe0, 0x68, 0x66, 0xec, 0x02, 0x46,
	0xf3, 0xc6, 0x88, 0x11, 0xff, 0xaa, 0x38, 0x2a, 0x3a, 0x01, 0x37, 0x97, 0x29, 0x7f, 0x4d, 0x3d,
	0x32, 0x25, 0xc1, 0x51, 0x64, 0x15, 0xbb, 0x83, 0xe3, 0xd6, 0x88, 0x85, 0xcc, 0x91, 0x53, 0x06,
	0x4e, 0x2a, 0xf0, 0x03, 0x3d, 0x32, 0x3d, 0x0c, 0x06, 0xb3, 0x61, 0xa8, 0xe3, 0x43, 0xed, 0x8a,
	0xcc, 0x8a, 0xad, 0x80, 0x6a, 0xbd, 0x90, 0x49, 0xac, 0x78, 0x7b, 0xc6, 0x95, 0xa5, 0x7b, 0xe3,
	0xa5, 0x88, 0x3f, 0x97, 0x55, 0xb6, 0xe6, 0xa5, 0x3d, 0x6e, 0x7f, 0xd1, 0x10, 0xc5, 0x89, 0x12,
	0x32, 0xf7, 0x0e, 0xa6, 0x24, 0x70, 0x22, 0xab, 0xd8, 0x35, 0x9c, 0x74, 0xb2, 0x2d, 0xd6, 0x04,
	0x5c, 0x54, 0xb1, 0xaa, 0x50, 0x27, 0x3a, 0x91, 0x55, 0xec, 0x12, 0xc6, 0x4b, 0x99, 0xee, 0x90,
	0xfc, 0x65, 0x93, 0x4e, 0x76, 0x1f, 0x9c, 0xe7, 0xac, 0x50, 0x9b, 0xd9, 0x37, 0x81, 0xe1, 0xdc,
	0x22, 0xd5, 0x22, 0xe1, 0xf4, 0x01, 0x46, 0x2f, 0x5c, 0x99, 0xab, 0x58, 0x08, 0x54, 0xf4, 0x74,
	0xbb, 0x77, 0x7b, 0x8d, 0xfe, 0xd9, 0xce, 0xd4, 0xc0, 0xb1, 0x1e, 0x7d, 0x04, 0xd7, 0x20, 0xd0,
	0xf3, 0x6d, 0x4b, 0x07, 0xcb, 0xf7, 0xff, 0x5b, 0xfd, 0x46, 0xdc, 0x03, 0x98, 0x59, 0xd3, 0x87,
	0x7a, 0xd6, 0xbb, 0x57, 0xce, 0x6f, 0x5f, 0x44, 0x37, 0x61, 0xbd, 0xa7, 0xfe, 0xca, 0xfc, 0x80,
	0xb5, 0xab, 0xdf, 0xfe, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x95, 0x3b, 0xed, 0x24, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DriveServiceClient is the client API for DriveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DriveServiceClient interface {
	GetDrivesList(ctx context.Context, in *DrivesRequest, opts ...grpc.CallOption) (*DrivesResponse, error)
	Locate(ctx context.Context, in *DriveLocateRequest, opts ...grpc.CallOption) (*DriveLocateResponse, error)
	LocateNode(ctx context.Context, in *NodeLocateRequest, opts ...grpc.CallOption) (*Empty, error)
}

type driveServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDriveServiceClient(cc grpc.ClientConnInterface) DriveServiceClient {
	return &driveServiceClient{cc}
}

func (c *driveServiceClient) GetDrivesList(ctx context.Context, in *DrivesRequest, opts ...grpc.CallOption) (*DrivesResponse, error) {
	out := new(DrivesResponse)
	err := c.cc.Invoke(ctx, "/v1api.DriveService/GetDrivesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *driveServiceClient) Locate(ctx context.Context, in *DriveLocateRequest, opts ...grpc.CallOption) (*DriveLocateResponse, error) {
	out := new(DriveLocateResponse)
	err := c.cc.Invoke(ctx, "/v1api.DriveService/Locate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *driveServiceClient) LocateNode(ctx context.Context, in *NodeLocateRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/v1api.DriveService/LocateNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DriveServiceServer is the server API for DriveService service.
type DriveServiceServer interface {
	GetDrivesList(context.Context, *DrivesRequest) (*DrivesResponse, error)
	Locate(context.Context, *DriveLocateRequest) (*DriveLocateResponse, error)
	LocateNode(context.Context, *NodeLocateRequest) (*Empty, error)
}

// UnimplementedDriveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDriveServiceServer struct {
}

func (*UnimplementedDriveServiceServer) GetDrivesList(ctx context.Context, req *DrivesRequest) (*DrivesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDrivesList not implemented")
}
func (*UnimplementedDriveServiceServer) Locate(ctx context.Context, req *DriveLocateRequest) (*DriveLocateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Locate not implemented")
}
func (*UnimplementedDriveServiceServer) LocateNode(ctx context.Context, req *NodeLocateRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LocateNode not implemented")
}

func RegisterDriveServiceServer(s *grpc.Server, srv DriveServiceServer) {
	s.RegisterService(&_DriveService_serviceDesc, srv)
}

func _DriveService_GetDrivesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DrivesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriveServiceServer).GetDrivesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1api.DriveService/GetDrivesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriveServiceServer).GetDrivesList(ctx, req.(*DrivesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DriveService_Locate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DriveLocateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriveServiceServer).Locate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1api.DriveService/Locate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriveServiceServer).Locate(ctx, req.(*DriveLocateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DriveService_LocateNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeLocateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriveServiceServer).LocateNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1api.DriveService/LocateNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriveServiceServer).LocateNode(ctx, req.(*NodeLocateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DriveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1api.DriveService",
	HandlerType: (*DriveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDrivesList",
			Handler:    _DriveService_GetDrivesList_Handler,
		},
		{
			MethodName: "Locate",
			Handler:    _DriveService_Locate_Handler,
		},
		{
			MethodName: "LocateNode",
			Handler:    _DriveService_LocateNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "drivemgrsvc.proto",
}
