{{- if eq .Values.deploy.controller true }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: baremetal-csi-controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: baremetal-csi-controller
      role: csi-do
  template:
    metadata:
      labels:
        app: baremetal-csi-controller
        role: csi-do
    spec:
      serviceAccount: csi-controller-sa
      terminationGracePeriodSeconds: 10
      containers:
      # ********************** EXTERNAL-PROVISIONER sidecar container definition **********************
      - name: csi-provisioner
        image: {{- if .Values.env.test }} csi-provisioner:{{ .Values.provisioner.image.tag }}
               {{- else }} {{ .Values.global.registry }}/csi-provisioner:{{ .Values.provisioner.image.tag }}
               {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - "--csi-address=$(ADDRESS)"
        - "--v=5"
        - "--feature-gates=Topology=true"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      # ********************** EXTERNAL_ATTACHER sidecar container definition **********************
      {{- if eq .Values.attacher.deploy true }}
      - name: csi-attacher
        image: {{- if .Values.env.test }} csi-attacher:{{ .Values.attacher.image.tag }}
               {{- else }} {{ .Values.global.registry }}/csi-attacher:{{ .Values.attacher.image.tag }}
               {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
      {{- end }}
      # ********************** baremetal-csi-controller container definition **********************
      - name: controller
        image: {{- if .Values.env.test }} baremetal-csi-plugin-controller:{{ default .Values.image.tag .Values.controller.image.tag }}
               {{- else }} {{ .Values.global.registry }}/baremetal-csi-plugin-controller:{{ default .Values.image.tag .Values.controller.image.tag }}
               {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--namespace=$(NAMESPACE)"
        - --loglevel={{ .Values.log.level }}
        - --healthport={{ .Values.controller.health.server.port }}
        {{- if .Values.logReceiver.create  }}
        - "--logpath=/var/log/csi.log"
        {{- end }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: LOG_FORMAT
          value: {{ .Values.log.format }}
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: logs
          mountPath: /var/log
        ports:
          - name: liveness-port
            containerPort: 9808
            protocol: TCP
        livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: liveness-port
            initialDelaySeconds: 300
            timeoutSeconds: 3
            periodSeconds: 10
        readinessProbe:
          exec:
            # have to use bash for extrapolating env var
            command: ["/health_probe", "-addr=:{{ .Values.controller.health.server.port }}"]
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 15
      # Liveness probe sidecar
      - name: liveness-probe
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: {{- if .Values.env.test  }} livenessprobe:{{ .Values.livenessprobe.image.tag }}
               {{- else }} {{ .Values.global.registry }}/livenessprobe:{{ .Values.livenessprobe.image.tag }}
               {{- end }}
        args:
          - --csi-address=/csi/csi.sock
        volumeMounts:
          - mountPath: /csi
            name: socket-dir
      # Log receiver sidecar
      {{- if .Values.logReceiver.create  }}
      - name: fluentbit-agent
        image: {{ .Values.global.registry }}/{{ .Values.fluentbitAgent.image.name }}:{{ default .Values.tag .Values.fluentbitAgent.image.tag }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: logs-config
          mountPath: /fluent-bit/etc
        - name: logs
          mountPath: /var/log/
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
      {{- end }}
      volumes:
      - name: logs
        emptyDir: {}
      {{- if .Values.logReceiver.create }}
      - name: logs-config
        configMap:
            name: {{ .Release.Name }}-logs-config
      {{- end }}
      - name: socket-dir
        emptyDir:
{{- end }}
