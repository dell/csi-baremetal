apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Release.Namespace }}
  name: csi-baremetal-se
spec:
  selector:
    matchLabels:
      app: csi-baremetal-se
  template:
    metadata:
      labels:
        app: csi-baremetal-se
        app.kubernetes.io/name: csi-baremetal
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '{{ .Values.metrics.port }}'
        prometheus.io/path: '{{ .Values.metrics.path }}'
    spec:
      serviceAccountName: csi-baremetal-extender-sa
      containers:
        - name: extender
          image: {{- if .Values.env.test }} baremetal-csi-plugin-extender:{{ .Values.image.tag }}
            {{- else }} {{ .Values.registry }}/baremetal-csi-plugin-extender:{{ .Values.image.tag }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --namespace=$(NAMESPACE)
            - --provisioner={{ .Values.provisioner }}
            - --port={{ .Values.port }}
            - --loglevel={{ .Values.log.level }}
            - --certFile={{ .Values.tls.certFile }}
            - --privateKeyFile={{ .Values.tls.privateKeyFile }}
            - --usenodeannotation={{ .Values.feature.usenodeannotation }}
            - --metrics-address=:{{ .Values.metrics.port }}
            - --metrics-path={{ .Values.metrics.path }}
          ports:
            - containerPort: {{  .Values.port }}
           {{- if .Values.metrics.port }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
           {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LOG_FORMAT
              value: text
      hostNetwork: true
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
