apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Release.Namespace }}
  name: csi-baremetal-se
spec:
  selector:
    matchLabels:
      app: csi-baremetal-se
  template:
    metadata:
      labels:
        app: csi-baremetal-se
    spec:
      serviceAccountName: csi-baremetal-extender-sa
      containers:
        - name: extender
          image: {{- if .Values.env.test }} baremetal-csi-plugin-extender:{{ .Values.image.tag }}
            {{- else }} {{ .Values.registry }}/baremetal-csi-plugin-extender:{{ .Values.image.tag }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --namespace=$(NAMESPACE)
            - --provisioner={{ .Values.provisioner }}
            - --port={{ .Values.port }}
            - --loglevel={{ .Values.log.level }}
            - --certFile={{ .Values.tls.certFile }}
            - --privateKeyFile={{ .Values.tls.privateKeyFile }}
          ports:
            - containerPort: {{  .Values.port }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
        {{- if .Values.patcher.enable }}
        - name: schedulerpatcher
          image: {{- if .Values.env.test }} baremetal-csi-plugin-scheduler-patcher:{{ .Values.image.tag }}
                                              {{- else }} {{ .Values.registry }}/baremetal-csi-plugin-scheduler-patcher:{{ .Values.image.tag }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - python3
            - -u
            - main.py
          args:
            - --loglevel={{ .Values.log.level }}
            {{ if .Values.patcher.restore_on_shutdown }}- --restore {{ end }}
            - --interval={{ .Values.patcher.interval }}
            - --manifest={{ .Values.patcher.manifest }}
            - --target-config-path={{ .Values.patcher.target_config_path}}
            - --target-policy-path={{ .Values.patcher.target_policy_path}}
            - --source-config-path=/config/{{ .Values.patcher.source_config_path}}
            - --source-policy-path=/config/{{ .Values.patcher.source_policy_path}}
            - --backup-path=/etc/kubernetes/scheduler
          volumeMounts:
            - mountPath: /config
              name: schedulerpatcher-config
              readOnly: true
            - mountPath: /etc/kubernetes/manifests
              name: kubernetes-manifests
            - mountPath: /etc/kubernetes/scheduler
              name: kubernetes-scheduler
      {{- end }}
      volumes:
        {{- if .Values.patcher.enable }}
        - name: schedulerpatcher-config
          configMap:
            name: {{ .Values.patcher.config_map_name }}
        - name: kubernetes-manifests
          hostPath:
            path: /etc/kubernetes/manifests
        - name: kubernetes-scheduler
          hostPath:
            path: /etc/kubernetes/scheduler
      {{- end }}
      hostNetwork: true
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
